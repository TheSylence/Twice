<controls:MetroWindow x:Class="Twice.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      lex:ResxLocalizationProvider.DefaultAssembly="Twice"
                      lex:ResxLocalizationProvider.DefaultDictionary="Strings"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:columns="clr-namespace:Twice.ViewModels.Columns"
                      xmlns:lex="http://wpflocalizeextension.codeplex.com"
                      xmlns:controls1="clr-namespace:Twice.Controls"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:behaviors="clr-namespace:Twice.Behaviors" IconOverlayBehavior="Flyouts"
                      xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
                      xmlns:flyouts="clr-namespace:Twice.Views.Flyouts" WindowButtonCommandsOverlayBehavior="Flyouts"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                      xmlns:views="clr-namespace:Twice.Views" SnapsToDevicePixels="False"
                      xmlns:twitter="clr-namespace:Twice.ViewModels.Twitter"
                      Style="{StaticResource WindowStyle}" Icon="../Resources/TwitterIcon.ico"
                      mc:Ignorable="d" Title="Twice" DataContext="{Binding Main, Source={StaticResource Locator}}">
	<i:Interaction.Behaviors>
		<behaviors:CallbackOnLoad Callback="{Binding}" />
		<behaviours:BorderlessWindowBehavior />
		<behaviours:WindowsSettingBehaviour />
		<behaviours:GlowWindowBehavior />
	</i:Interaction.Behaviors>
	<controls:MetroWindow.InputBindings>
		<KeyBinding Modifiers="Control" Key="N" Command="{Binding NewTweetCommand}" />
		<KeyBinding Modifiers="Control+Shift" Key="N" Command="{Binding NewMessageCommand}" />
		<KeyBinding Modifiers="Control" Key="F" Command="{Binding SearchCommand}" />
		<KeyBinding Modifiers="Control" Key="E" Command="{Binding SettingsCommand}" />
		<KeyBinding Modifiers="Control" Key="Insert" Command="{Binding AddColumnCommand}" />
		<KeyBinding Modifiers="Control+Shift" Key="A" Command="{Binding AccountsCommand}" />
	</controls:MetroWindow.InputBindings>
	<controls:MetroWindow.Flyouts>
		<controls:FlyoutsControl>
			<flyouts:NotificationBar />
		</controls:FlyoutsControl>
	</controls:MetroWindow.Flyouts>
	<controls:MetroWindow.RightWindowCommands>
		<controls:WindowCommands>
			<Button ToolTip="{lex:Loc Info}" Command="{Binding InfoCommand}">
				<materialDesign:PackIcon Kind="Information" />
			</Button>
		</controls:WindowCommands>
	</controls:MetroWindow.RightWindowCommands>
	<controls:MetroWindow.IconTemplate>
		<DataTemplate>
			<materialDesign:PackIcon Kind="TwitterCircle" VerticalAlignment="Center" HorizontalAlignment="Center" />
		</DataTemplate>
	</controls:MetroWindow.IconTemplate>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>

		<DockPanel VerticalAlignment="Stretch" Margin="0,0,5,0">
			<DockPanel.Resources>
				<Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignToolForegroundButton}">
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				</Style>
			</DockPanel.Resources>
			<StackPanel Orientation="Vertical" DockPanel.Dock="Bottom">

				<Button Width="36" Height="36"
				        ToolTip="{lex:Loc NewTweet}" Command="{Binding NewTweetCommand}">
					<materialDesign:PackIcon Kind="Pencil" />
				</Button>

				<Button Width="36" Height="36"
				        ToolTip="{lex:Loc ComposeMessage}" Command="{Binding NewMessageCommand}">
					<materialDesign:PackIcon Kind="MessageText" />
				</Button>

				<Button Width="36" Height="36" Command="{Binding SearchCommand}"
				        ToolTip="{lex:Loc Search}">
					<materialDesign:PackIcon Kind="Magnify" />
				</Button>

				<Button Width="36" Height="36"
				        ToolTip="{lex:Loc Accounts}" Command="{Binding AccountsCommand}">
					<materialDesign:PackIcon Kind="AccountMultiple" />
				</Button>

				<Button Width="36" Height="36" Command="{Binding ToggleColumnsLockCommand}"
				        ToolTip="{lex:Loc ToggleColumnLock}">
					<Grid>
						<materialDesign:PackIcon Kind="Lock"
						                         Visibility="{Binding ColumnsLocked, Converter={StaticResource BoolToVisibleConv}}" />
						<materialDesign:PackIcon Kind="LockOpenOutline"
						                         Visibility="{Binding ColumnsLocked, Converter={StaticResource InvertBoolToVisibleConv}}" />
					</Grid>
				</Button>

				<Button Width="36" Height="36"
				        ToolTip="{lex:Loc Settings}" Command="{Binding SettingsCommand}">
					<materialDesign:PackIcon Kind="Settings" />
				</Button>
			</StackPanel>

			<StackPanel Orientation="Vertical" DockPanel.Dock="Top">
				<Button Width="36" Height="36" Command="{Binding AddColumnCommand}"
				        ToolTip="{lex:Loc AddColumn}">
					<materialDesign:PackIcon Kind="Plus" />
				</Button>

				<ItemsControl ItemsSource="{Binding Columns}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Vertical" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="columns:IColumnViewModel">
							<Button Width="36" Height="36" ToolTip="{Binding Title}">
								<i:Interaction.Behaviors>
									<behaviors:ScrollIntoView Item="{Binding}" Control="{Binding ElementName=itColumnList}" />
								</i:Interaction.Behaviors>

								<materialDesign:PackIcon Kind="{Binding Icon, Converter={StaticResource IconToVisualConv}}" />
							</Button>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</StackPanel>
		</DockPanel>

		<ItemsControl ItemsSource="{Binding Columns}" Grid.Column="1" x:Name="itColumnList"
		              dragDrop:DragDrop.IsDragSource="True"
		              dragDrop:DragDrop.IsDropTarget="True"
		              dragDrop:DragDrop.DragSourceIgnore="False"
		              dragDrop:DragDrop.DragHandler="{Binding DragDropHandler}"
		              dragDrop:DragDrop.DropHandler="{Binding DragDropHandler}"
		              FocusVisualStyle="{x:Null}">
			<ItemsControl.Template>
				<ControlTemplate>
					<ScrollViewer Padding="{TemplateBinding Padding}" HorizontalScrollBarVisibility="Auto"
					              VerticalScrollBarVisibility="Disabled">
						<ItemsPresenter FocusVisualStyle="{x:Null}" />
					</ScrollViewer>
				</ControlTemplate>
			</ItemsControl.Template>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Horizontal" FocusVisualStyle="{x:Null}" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate DataType="columns:IColumnViewModel">
					<Grid Margin="0,0,5,0">
						<DockPanel HorizontalAlignment="Left" Width="{Binding Width}">
							<controls1:ColumnHeader DataContext="{Binding}" DockPanel.Dock="Top">
								<i:Interaction.Behaviors>
									<behaviors:ColumnHeaderHandler ActionDispatcher="{Binding ActionDispatcher}" />
								</i:Interaction.Behaviors>
							</controls1:ColumnHeader>

							<views:StatusContainer>
								<ItemsControl ItemsSource="{Binding Items, IsAsync=True}"
								              HorizontalContentAlignment="Stretch" ScrollViewer.CanContentScroll="True"
								              VirtualizingStackPanel.IsVirtualizing="True"
								              VirtualizingStackPanel.ScrollUnit="Pixel"
								              VirtualizingStackPanel.VirtualizationMode="Recycling"
								              FocusVisualStyle="{x:Null}">
									<ItemsControl.ItemTemplateSelector>
										<views:GenericTemplateSelector>
											<views:GenericDataTemplateSelectorItem TemplatedType="{x:Type twitter:StatusViewModel}"
											                                       Template="{StaticResource StatusViewTemplate}" />
											<views:GenericDataTemplateSelectorItem TemplatedType="{x:Type twitter:MessageViewModel}"
											                                       Template="{StaticResource MessageViewTemplate}" />
											<views:GenericDataTemplateSelectorItem TemplatedType="{x:Type twitter:ScheduleItem}"
											                                       Template="{StaticResource ScheduleViewTemplate}" />
										</views:GenericTemplateSelector>
									</ItemsControl.ItemTemplateSelector>
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<VirtualizingStackPanel FocusVisualStyle="{x:Null}" />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.Template>
										<ControlTemplate>
											<ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}"
											              HorizontalScrollBarVisibility="Disabled"
											              VerticalScrollBarVisibility="Auto" Focusable="False" FocusVisualStyle="{x:Null}">
												<i:Interaction.Behaviors>
													<behaviors:ColumnScrollHandler ActionDispatcher="{Binding ActionDispatcher}" />
												</i:Interaction.Behaviors>

												<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
											</ScrollViewer>
										</ControlTemplate>
									</ItemsControl.Template>
								</ItemsControl>
							</views:StatusContainer>
						</DockPanel>

						<controls:ProgressRing IsActive="{Binding IsLoading, Mode=OneWay}" VerticalAlignment="Center"
						                       HorizontalAlignment="Center" IsLarge="True" />
					</Grid>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
	</Grid>
</controls:MetroWindow>