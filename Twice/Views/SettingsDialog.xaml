<simpleChildWindow:ChildWindow x:Class="Twice.Views.SettingsDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:simpleChildWindow="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:settings="clr-namespace:Twice.ViewModels.Settings"
             xmlns:configuration="clr-namespace:Twice.Models.Configuration"
             xmlns:xaml="clr-namespace:Markdown.Xaml;assembly=Markdown.Xaml"
             ShowCloseButton="True" mc:Ignorable="d" Title="{lex:Loc Settings}"
             DataContext="{Binding Settings, Source={StaticResource DialogLocator}}"
             d:DesignHeight="300" d:DesignWidth="300"  Padding="20"
			HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
	<simpleChildWindow:ChildWindow.Resources>
		<xaml:Markdown x:Key="Markdown">
			<xaml:Markdown.DocumentStyle>
				<Style TargetType="FlowDocument">
					<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
					<Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
				</Style>
			</xaml:Markdown.DocumentStyle>
		</xaml:Markdown>

		<xaml:TextToFlowDocumentConverter x:Key="FlowDocConv" Markdown="{StaticResource Markdown}" />
	</simpleChildWindow:ChildWindow.Resources>
	<DockPanel>
		<DockPanel.Resources>
			<Thickness x:Key="Spacing" Top="0" Left="0" Right="0" Bottom="20" />
			<!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
			<Style TargetType="Button" BasedOn="{StaticResource MetroButton}">
				<Setter Property="MinWidth" Value="75" />
				<Setter Property="Margin" Value="5,0" />
			</Style>
		</DockPanel.Resources>
		<StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right">
			<Button Content="{lex:Loc Save}" IsDefault="True" Command="{Binding OkCommand}" />
			<Button Content="{lex:Loc Cancel}" IsCancel="True" Command="{Binding CancelCommand}" />
		</StackPanel>
		<TabControl DockPanel.Dock="Top" controls:TabControlHelper.IsUnderlined="True">
			<TabItem Header="{lex:Loc General}" DataContext="{Binding General}" />
			<TabItem Header="{lex:Loc Visual}" DataContext="{Binding Visual}">
				<Grid>
					<Grid.Resources>
						<DataTemplate x:Key="ColorDataTemplate" DataType="settings:ColorItem">
							<DockPanel>
								<Ellipse Fill="{Binding ColorBrush}" Stroke="{Binding BorderBrush}" Width="18" Height="18" />
								<TextBlock Text="{Binding Name}" Margin="5,0" />
							</DockPanel>
						</DataTemplate>
					</Grid.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<StackPanel Orientation="Vertical">
						<TextBlock Text="{lex:Loc Theme}" />
						<ComboBox Margin="0,0,0,5" ItemsSource="{Binding AvailableThemes}"
								  ItemTemplate="{StaticResource ColorDataTemplate}"
								  SelectedItem="{Binding SelectedTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

						<TextBlock Text="{lex:Loc AccentColor}" />
						<ComboBox Margin="{StaticResource Spacing}"
								  ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}" SelectedItem="{Binding SelectedColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock Text="{lex:Loc FontSize}" />
						<ComboBox Margin="{StaticResource Spacing}" ItemsSource="{Binding AvailableFontSizes}"
								  SelectedItem="{Binding SelectedFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
							<ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding DisplayName}" FontSize="{Binding Size}" />
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>

						<TextBlock Text="{lex:Loc HashtagColor}" />
						<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}"
								  SelectedItem="{Binding SelectedHashtagColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock Text="{lex:Loc MentionColor}" />
						<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}"
								  SelectedItem="{Binding SelectedMentionColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock Text="{lex:Loc LinkColor}" />
						<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}" Margin="{StaticResource Spacing}"
								  SelectedItem="{Binding SelectedLinkColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

						<CheckBox Content="{lex:Loc InlineMediaInTimeline}" IsChecked="{Binding InlineMedias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<CheckBox Content="{lex:Loc ShowStatusSeparator}" IsChecked="{Binding ShowStatusSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<CheckBox Content="{lex:Loc UseStarsForFavorites}" IsChecked="{Binding UseStars, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					</StackPanel>
				</Grid>
			</TabItem>
			<TabItem Header="{lex:Loc Muting}" DataContext="{Binding Mute}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<DockPanel>
						<TextBlock Text="{lex:Loc ActiveMutes}" DockPanel.Dock="Top" />

						<StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
							<Button Content="{lex:Loc Add}" Command="{Binding AddCommand}" />
							<Button Content="{lex:Loc Edit}" Command="{Binding EditCommand}" />
							<Button Content="{lex:Loc Delete}" Command="{Binding RemoveCommand}" />
						</StackPanel>

						<ListView ItemsSource="{Binding Entries}" Margin="5" SelectedItem="{Binding SelectedEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
							<ListView.ItemTemplate>
								<DataTemplate DataType="configuration:MuteEntry">
									<StackPanel Orientation="Vertical">
										<TextBlock Text="{Binding Filter}" />
										<Grid>
											<TextBlock Text="{Binding EndDate}" Visibility="{Binding EndDate.HasValue, Converter={StaticResource BoolToVisibleConv}}" />
											<TextBlock Text="{lex:Loc Forever}" FontStyle="Italic" Visibility="{Binding EndDate.HasValue, Converter={StaticResource InvertBoolToVisibleConv}}" />
										</Grid>
									</StackPanel>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
					</DockPanel>

					<StackPanel Orientation="Vertical" Grid.Column="1" DataContext="{Binding EditData}" IsEnabled="{Binding Converter={StaticResource NotNullConv}}">
						<TextBlock Text="{lex:Loc Filter}" Margin="5" />
						<TextBox Margin="5,0" controls:TextBoxHelper.Watermark="{lex:Loc FilterCriteria}" Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<CheckBox Content="{lex:Loc ActiveUntil}" Margin="5" IsChecked="{Binding HasEndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<DatePicker Margin="5,0" SelectedDate="{Binding EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding HasEndDate}" />
						<StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Center">
							<Button Content="{lex:Loc Save}" Command="{Binding SaveCommand}" />
							<Button Content="{lex:Loc Cancel}" Command="{Binding CancelCommand}" />
						</StackPanel>
					</StackPanel>

					<FlowDocumentScrollViewer Grid.Column="2" Document="{Binding HelpDocument, Converter={StaticResource FlowDocConv}}" />
				</Grid>
			</TabItem>
		</TabControl>
	</DockPanel>
</simpleChildWindow:ChildWindow>