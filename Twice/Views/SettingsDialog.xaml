<views:Dialog x:Class="Twice.Views.SettingsDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:settings="clr-namespace:Twice.ViewModels.Settings"
             xmlns:configuration="clr-namespace:Twice.Models.Configuration"
             xmlns:xaml="clr-namespace:Markdown.Xaml;assembly=Markdown.Xaml"
             xmlns:views="clr-namespace:Twice.Views"
             xmlns:controls1="clr-namespace:Twice.Controls"
             mc:Ignorable="d" Title="{lex:Loc Settings}"
             DataContext="{Binding Settings, Source={StaticResource DialogLocator}}"
             d:DesignHeight="300" d:DesignWidth="300"
			 HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
	<views:Dialog.Resources>
		<xaml:Markdown x:Key="Markdown">
			<xaml:Markdown.DocumentStyle>
				<Style TargetType="FlowDocument">
					<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
					<Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
				</Style>
			</xaml:Markdown.DocumentStyle>
		</xaml:Markdown>

		<xaml:TextToFlowDocumentConverter x:Key="FlowDocConv" Markdown="{StaticResource Markdown}" />

		<Thickness x:Key="Spacing" Top="0" Left="0" Right="0" Bottom="20" />
	</views:Dialog.Resources>

	<TabControl DockPanel.Dock="Top" controls:TabControlHelper.IsUnderlined="True">
		<TabItem Header="{lex:Loc General}" DataContext="{Binding General}" />
		<TabItem Header="{lex:Loc Visual}" DataContext="{Binding Visual}">
			<Grid>
				<Grid.Resources>
					<DataTemplate x:Key="ColorDataTemplate" DataType="settings:ColorItem">
						<DockPanel>
							<Ellipse Fill="{Binding ColorBrush}" Stroke="{Binding BorderBrush}" Width="18" Height="18" />
							<TextBlock Text="{Binding Name}" Margin="5,0" />
						</DockPanel>
					</DataTemplate>
				</Grid.Resources>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<StackPanel Orientation="Vertical">
					<TextBlock Text="{lex:Loc Theme}" />
					<ComboBox Margin="0,0,0,5" ItemsSource="{Binding AvailableThemes}"
								  ItemTemplate="{StaticResource ColorDataTemplate}"
								  SelectedItem="{Binding UseDarkTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

					<TextBlock Text="{lex:Loc AccentColor}" />
					<ComboBox Margin="{StaticResource Spacing}"
								  ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}" SelectedItem="{Binding SelectedColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBlock Text="{lex:Loc FontSize}" />
					<ComboBox Margin="{StaticResource Spacing}" ItemsSource="{Binding AvailableFontSizes}"
								  SelectedItem="{Binding SelectedFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding DisplayName}" FontSize="{Binding Size}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<TextBlock Text="{lex:Loc HashtagColor}" />
					<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}"
								  SelectedItem="{Binding SelectedHashtagColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBlock Text="{lex:Loc MentionColor}" />
					<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}"
								  SelectedItem="{Binding SelectedMentionColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<TextBlock Text="{lex:Loc LinkColor}" />
					<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableColors}" Margin="{StaticResource Spacing}"
								  SelectedItem="{Binding SelectedLinkColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

					<CheckBox Content="{lex:Loc InlineMediaInTimeline}" IsChecked="{Binding InlineMedias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<CheckBox Content="{lex:Loc UseStarsForFavorites}" IsChecked="{Binding UseStars, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</StackPanel>
			</Grid>
		</TabItem>
		<TabItem Header="{lex:Loc Muting}" DataContext="{Binding Mute}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<DockPanel>
					<TextBlock Text="{lex:Loc ActiveMutes}" DockPanel.Dock="Top" />

					<StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
						<Button Content="{lex:Loc Add}" Command="{Binding AddCommand}" />
						<Button Content="{lex:Loc Edit}" Command="{Binding EditCommand}" />
						<Button Content="{lex:Loc Delete}" Command="{Binding RemoveCommand}" />
					</StackPanel>

					<ListView ItemsSource="{Binding Entries}" Margin="5" SelectedItem="{Binding SelectedEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<ListView.ItemTemplate>
							<DataTemplate DataType="configuration:MuteEntry">
								<StackPanel Orientation="Vertical">
									<TextBlock Text="{Binding Filter}" />
									<Grid>
										<TextBlock Text="{Binding EndDate}" Visibility="{Binding EndDate.HasValue, Converter={StaticResource BoolToVisibleConv}}" />
										<TextBlock Text="{lex:Loc Forever}" FontStyle="Italic" Visibility="{Binding EndDate.HasValue, Converter={StaticResource InvertBoolToVisibleConv}}" />
									</Grid>
								</StackPanel>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</DockPanel>

				<StackPanel Orientation="Vertical" Grid.Column="1" DataContext="{Binding EditData}" IsEnabled="{Binding Converter={StaticResource NotNullConv}}">
					<TextBlock Text="{lex:Loc Filter}" Margin="5" />
					<TextBox Margin="5,0" controls:TextBoxHelper.Watermark="{lex:Loc FilterCriteria}" Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<CheckBox Content="{lex:Loc ActiveUntil}" Margin="5" IsChecked="{Binding HasEndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<DatePicker Margin="5,0" SelectedDate="{Binding EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding HasEndDate}" />
					<StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Center">
						<Button Content="{lex:Loc Save}" Command="{Binding SaveCommand}" />
						<Button Content="{lex:Loc Cancel}" Command="{Binding CancelCommand}" />
					</StackPanel>
				</StackPanel>

				<FlowDocumentScrollViewer Grid.Column="2" Document="{Binding HelpDocument, Converter={StaticResource FlowDocConv}}" />
			</Grid>
		</TabItem>
		<TabItem Header="{lex:Loc Notifications}" DataContext="{Binding Notifications}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<GroupBox Header="{lex:Loc AvailableNotificationMechanisms}">
					<ItemsControl ItemsSource="{Binding AvailableNotifications}">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="settings:NotificationModuleSettings">
								<CheckBox Content="{Binding Title}" IsChecked="{Binding Enabled, Mode=TwoWay}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</GroupBox>

				<ItemsControl ItemsSource="{Binding EnabledNotifications}" Grid.Column="1">
					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="settings:NotificationModuleSettings">
							<GroupBox Header="{Binding Title}">
								<ContentControl Content="{Binding}">
									<ContentControl.ContentTemplateSelector>
										<views:GenericTemplateSelector>
											<views:GenericDataTemplateSelectorItem TemplatedType="settings:SoundNotificationSettings">
												<DataTemplate DataType="settings:SoundNotificationSettings">
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="Auto" />
															<ColumnDefinition />
														</Grid.ColumnDefinitions>

														<TextBlock Text="{lex:Loc SoundFile}" Margin="5" VerticalAlignment="Center" />
														<controls1:FileSelectBox Grid.Column="1" />
													</Grid>
												</DataTemplate>
											</views:GenericDataTemplateSelectorItem>
											<views:GenericDataTemplateSelectorItem TemplatedType="settings:ToastNotificationSettings">
												<DataTemplate DataType="settings:ToastNotificationSettings">
													<TextBlock Text="{lex:Loc NoFurtherSettingsForThisNotificationType}" />
												</DataTemplate>
											</views:GenericDataTemplateSelectorItem>
											<views:GenericDataTemplateSelectorItem TemplatedType="settings:PopupNotificationSettings">
												<DataTemplate DataType="settings:PopupNotificationSettings">
													<Grid>
														<Grid.RowDefinitions>
															<RowDefinition />
															<RowDefinition />
														</Grid.RowDefinitions>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="Auto" />
															<ColumnDefinition />
														</Grid.ColumnDefinitions>

														<TextBlock Text="{lex:Loc DisplayToShowPopupsAt}" VerticalAlignment="Center" Margin="5" />
														<ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="5,0" DisplayMemberPath="Name"
																	  SelectedValuePath="Value" SelectedValue="{Binding SelectedDisplay, Mode=TwoWay}"
																	  ItemsSource="{Binding AvailableDisplays}" />

														<TextBlock Text="{lex:Loc CornerToShowPopupsIn}" Grid.Row="1" VerticalAlignment="Center" Margin="5" />
														<ComboBox ItemsSource="{Binding AvailableCorners}" DisplayMemberPath="Name" Grid.Column="1"
																	  SelectedValuePath="Value" SelectedValue="{Binding SelectedCorner, Mode=TwoWay}"
																	  Grid.Row="1" VerticalAlignment="Center" Margin="5,0" />
													</Grid>
												</DataTemplate>
											</views:GenericDataTemplateSelectorItem>
										</views:GenericTemplateSelector>
									</ContentControl.ContentTemplateSelector>
								</ContentControl>
							</GroupBox>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Grid>
		</TabItem>
	</TabControl>
</views:Dialog>