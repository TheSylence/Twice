<dialogs:DialogWindow x:Class="Twice.Views.Dialogs.SettingsDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:settings="clr-namespace:Twice.ViewModels.Settings"
             xmlns:configuration="clr-namespace:Twice.Models.Configuration"
             xmlns:xaml="clr-namespace:Markdown.Xaml;assembly=Markdown.Xaml"
             xmlns:views="clr-namespace:Twice.Views" xmlns:controls1="clr-namespace:Twice.Controls"
			xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			xmlns:behaviors="clr-namespace:Twice.Behaviors" WindowStartupLocation="CenterOwner"
			xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
			xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			xmlns:dialogs="clr-namespace:Twice.Views.Dialogs"
			xmlns:system="clr-namespace:System;assembly=mscorlib"
			mc:Ignorable="d" Title="{lex:Loc Settings}" Style="{StaticResource DialogStyle}"
             DataContext="{Binding Settings, Source={StaticResource Locator}}"
             d:DesignHeight="300" d:DesignWidth="300" Width="700" Height="600">
	<i:Interaction.Behaviors>
		<behaviors:CloseableView />
		<behaviours:BorderlessWindowBehavior />
		<behaviors:CallbackOnLoad Callback="{Binding}" />
	</i:Interaction.Behaviors>
	<controls:MetroWindow.Resources>
		<xaml:Markdown x:Key="Markdown">
			<xaml:Markdown.DocumentStyle>
				<Style TargetType="FlowDocument">
					<Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
					<Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
				</Style>
			</xaml:Markdown.DocumentStyle>
		</xaml:Markdown>

		<xaml:TextToFlowDocumentConverter x:Key="FlowDocConv" Markdown="{StaticResource Markdown}" />

		<Thickness x:Key="Spacing" Top="0" Left="0" Right="0" Bottom="20" />
	</controls:MetroWindow.Resources>

	<DockPanel>
		<DockPanel Dock="Bottom">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right" Margin="5">
				<Button Content="{lex:Loc Save}" IsDefault="True" Command="{Binding OkCommand}" Margin="5"
										Style="{DynamicResource MaterialDesignRaisedButton}" />
				<Button Content="{lex:Loc Cancel}" IsCancel="True" Command="{Binding CancelCommand}"
										Margin="5"  Style="{DynamicResource MaterialDesignRaisedButton}" />
			</StackPanel>
		</DockPanel>

		<TabControl controls:TabControlHelper.IsUnderlined="True" Margin="5">
			<TabItem Header="{lex:Loc General}" DataContext="{Binding General}">
				<Grid Margin="5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<StackPanel Orientation="Vertical">
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{lex:Loc Language}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
							<materialDesign:PackIcon Kind="HelpCircle" ToolTip="{lex:Loc RequiresRestart}" Margin="5,0" />
						</StackPanel>
						<ComboBox Margin="{StaticResource Spacing}" ItemsSource="{Binding AvailableLanguages}" SelectedItem="{Binding SelectedLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								  DisplayMemberPath="NativeName" />

						<CheckBox Content="{lex:Loc StreamContentInRealtime}" Margin="{StaticResource Spacing}"
								  IsChecked="{Binding RealtimeStreaming,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
						<CheckBox Content="{lex:Loc AutomaticallyCheckForUpdates}" IsChecked="{Binding CheckForUpdates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<CheckBox Content="{lex:Loc IncludePrereleases}" Margin="{StaticResource Spacing}"
								  IsEnabled="{Binding CheckForUpdates}"
								  IsChecked="{Binding IncludePrereleaseUpdates,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />

						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{lex:Loc TweetFetchCount}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
							<materialDesign:PackIcon Kind="HelpCircle" ToolTip="{lex:Loc TweetFetchCountDescription}" Margin="5,0" />
						</StackPanel>
						<ComboBox ItemsSource="{Binding AvailableFetchCounts}" SelectedValue="{Binding TweetFetchCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					</StackPanel>
				</Grid>
			</TabItem>
			<TabItem Header="{lex:Loc Visual}" DataContext="{Binding Visual}">
				<Grid Margin="5">
					<Grid.Resources>
						<DataTemplate x:Key="ColorDataTemplate" DataType="settings:ColorItem">
							<DockPanel>
								<Ellipse Fill="{Binding ColorBrush}" Stroke="{Binding BorderBrush}" Width="18" Height="18" />
								<TextBlock Text="{Binding Name}" Margin="5,0" />
							</DockPanel>
						</DataTemplate>
					</Grid.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<StackPanel Orientation="Vertical">
						<TextBlock Text="{lex:Loc Theme}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
						<StackPanel Orientation="Horizontal" Margin="{StaticResource Spacing}">
							<TextBlock Text="{lex:Loc ThemeLight}" />
							<ToggleButton IsChecked="{Binding UseDarkTheme}" Margin="5,0" />
							<TextBlock Text="{lex:Loc ThemeDark}" />
						</StackPanel>

						<TextBlock Text="{lex:Loc PrimaryColor}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
						<ComboBox Margin="{StaticResource Spacing}" Style="{DynamicResource MaterialDesignComboBox}"
								  ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailablePrimaryColors}" SelectedItem="{Binding SelectedPrimaryColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

						<TextBlock Text="{lex:Loc AccentColor}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
						<ComboBox Margin="{StaticResource Spacing}" Style="{DynamicResource MaterialDesignComboBox}"
								  ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableAccentColors}" SelectedItem="{Binding SelectedAccentColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

						<TextBlock Text="{lex:Loc FontSize}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
						<ComboBox Margin="{StaticResource Spacing}" ItemsSource="{Binding AvailableFontSizes}" Style="{DynamicResource MaterialDesignComboBox}"
								  SelectedItem="{Binding SelectedFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
							<ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding DisplayName}" FontSize="{Binding Size}" />
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>

						<TextBlock Text="{lex:Loc HashtagColor}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
						<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}" Style="{DynamicResource MaterialDesignComboBox}"
								  ItemsSource="{Binding AvailableAccentColors}"
								  SelectedItem="{Binding SelectedHashtagColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock Text="{lex:Loc MentionColor}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
						<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}" Style="{DynamicResource MaterialDesignComboBox}"
								  ItemsSource="{Binding AvailableAccentColors}"
								  SelectedItem="{Binding SelectedMentionColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock Text="{lex:Loc LinkColor}" Style="{StaticResource MaterialDesignBody2TextBlock}" />
						<ComboBox ItemTemplate="{StaticResource ColorDataTemplate}"
								  ItemsSource="{Binding AvailableAccentColors}" Margin="{StaticResource Spacing}"
								  SelectedItem="{Binding SelectedLinkColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

						<CheckBox Content="{lex:Loc InlineMediaInTimeline}" IsChecked="{Binding InlineMedias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					</StackPanel>

					<views:StatusContainer Grid.Column="1">
						<views:StatusContainer.Resources>
							<ResourceDictionary x:Name="PreviewResourceDictionary" />
						</views:StatusContainer.Resources>
						<i:Interaction.Behaviors>
							<behaviors:PreviewResourceManipulator Dictionary="{Binding ElementName=PreviewResourceDictionary}"
																  FontSize="{Binding SelectedFontSize.Size}"
																  HashtagColor="{Binding SelectedHashtagColor.ColorBrush}"
																  LinkColor="{Binding SelectedLinkColor.ColorBrush}"
																  MentionColor="{Binding SelectedMentionColor.ColorBrush}"
																  PrimaryColorName="{Binding SelectedPrimaryColor.Name}"
																  AccentColorName="{Binding SelectedAccentColor.Name}"
																  DarkTheme="{Binding UseDarkTheme}" />
						</i:Interaction.Behaviors>
						<ItemsControl ItemsSource="{Binding PreviewStatuses}" ItemTemplate="{StaticResource StatusViewTemplate}" />
					</views:StatusContainer>
				</Grid>
			</TabItem>
			<TabItem Header="{lex:Loc Muting}" DataContext="{Binding Mute}">
				<Grid Margin="5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<DockPanel>
						<TextBlock Text="{lex:Loc ActiveMutes}" DockPanel.Dock="Top" />

						<StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center">
							<Button Command="{Binding AddCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
									ToolTip="{lex:Loc Add}" Margin="5,0">
								<materialDesign:PackIcon Kind="Plus" />
							</Button>
							<Button Command="{Binding EditCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
									ToolTip="{lex:Loc Edit}" Margin="5,0">
								<materialDesign:PackIcon Kind="Pencil" />
							</Button>
							<Button Command="{Binding RemoveCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
									ToolTip="{lex:Loc Delete}" Margin="5,0">
								<materialDesign:PackIcon Kind="Delete" />
							</Button>
						</StackPanel>

						<ListBox ItemsSource="{Binding Entries}" Margin="5" SelectedItem="{Binding SelectedEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
							<ListBox.InputBindings>
								<KeyBinding Key="Delete" Command="{Binding RemoveCommand}" />
								<KeyBinding Key="E" Modifiers="Control" Command="{Binding EditCommand}" />
								<KeyBinding Key="N" Modifiers="Control" Command="{Binding AddCommand}" />
							</ListBox.InputBindings>
							<ListBox.ItemTemplate>
								<DataTemplate DataType="configuration:MuteEntry">
									<StackPanel Orientation="Vertical">
										<TextBlock Text="{Binding Filter}" />
										<Grid>
											<TextBlock Text="{Binding EndDate}" Visibility="{Binding HasEndDate, Converter={StaticResource BoolToVisibleConv}}" />
											<TextBlock Text="{lex:Loc Forever}" FontStyle="Italic" Visibility="{Binding HasEndDate, Converter={StaticResource InvertBoolToVisibleConv}}" />
										</Grid>
									</StackPanel>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</DockPanel>

					<StackPanel Orientation="Vertical" Grid.Column="1" DataContext="{Binding EditData}" IsEnabled="{Binding Converter={StaticResource NotNullConv}}">
						<TextBlock Text="{lex:Loc Filter}" Margin="5" />
						<TextBox Margin="5,0" controls:TextBoxHelper.Watermark="{lex:Loc FilterCriteria}" Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<CheckBox Content="{lex:Loc ActiveUntil}" Margin="5" IsChecked="{Binding HasEndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						<DatePicker Margin="5,0" SelectedDate="{Binding EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding HasEndDate}" />
						<CheckBox IsChecked="{Binding CaseSensitive, Mode=TwoWay}" Content="{lex:Loc CaseSensitive}" Margin="5" />
						<StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Center">
							<Button Command="{Binding SaveCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
									ToolTip="{lex:Loc Apply}" Margin="5,0">
								<materialDesign:PackIcon Kind="Check" />
							</Button>
							<Button Command="{Binding CancelCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
									ToolTip="{lex:Loc Cancel}" Margin="5,0">
								<materialDesign:PackIcon Kind="Close" />
							</Button>
						</StackPanel>
					</StackPanel>

					<FlowDocumentScrollViewer Grid.Column="2" Document="{Binding HelpDocument, Converter={StaticResource FlowDocConv}}" />
				</Grid>
			</TabItem>
			<TabItem Header="{lex:Loc Notifications}" DataContext="{Binding Notifications}">
				<Grid Margin="5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<GroupBox Header="{lex:Loc AvailableNotificationMechanisms}" Margin="5">
						<ItemsControl ItemsSource="{Binding AvailableNotifications}">
							<ItemsControl.ItemTemplate>
								<DataTemplate DataType="settings:NotificationModuleSettings">
									<CheckBox Content="{Binding Title}" IsChecked="{Binding Enabled, Mode=TwoWay}" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</GroupBox>

					<ItemsControl ItemsSource="{Binding EnabledNotifications}" Grid.Column="1">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="settings:NotificationModuleSettings">
								<GroupBox Header="{Binding Title}" Margin="5">
									<ContentControl Content="{Binding}">
										<ContentControl.ContentTemplateSelector>
											<views:GenericTemplateSelector>
												<views:GenericDataTemplateSelectorItem TemplatedType="settings:SoundNotificationSettings">
													<DataTemplate DataType="settings:SoundNotificationSettings">
														<Grid>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition />
															</Grid.ColumnDefinitions>
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
															</Grid.RowDefinitions>

															<StackPanel Orientation="Horizontal">
																<TextBlock Text="{lex:Loc SoundFile}" Margin="5" VerticalAlignment="Center" />
																<materialDesign:PackIcon Kind="HelpCircle" ToolTip="{lex:Loc LeaveEmptyForDefaultSound}" VerticalAlignment="Center" />
															</StackPanel>
															<controls1:FileSelectBox Grid.Column="1" Value="{Binding SoundFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

															<Button Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding PreviewCommand}"
																	Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="5">
																<DockPanel>
																	<materialDesign:PackIcon Kind="Play" DockPanel.Dock="Left" />
																	<TextBlock Text="{lex:Loc Preview}" Margin="5,0" VerticalAlignment="Center" />
																</DockPanel>
															</Button>
														</Grid>
													</DataTemplate>
												</views:GenericDataTemplateSelectorItem>
												<views:GenericDataTemplateSelectorItem TemplatedType="settings:ToastNotificationSettings">
													<DataTemplate DataType="settings:ToastNotificationSettings">
														<Grid>
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
															</Grid.RowDefinitions>

															<StackPanel Orientation="Horizontal">
																<RadioButton Content="{lex:Loc Top}" Margin="5" IsChecked="{Binding Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
																<RadioButton Content="{lex:Loc Bottom}" Margin="5" IsChecked="{Binding Top, Converter={StaticResource InvertBoolConv}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
															</StackPanel>

															<StackPanel Orientation="Horizontal" Grid.Row="1" Margin="5">
																<TextBlock Text="{lex:Loc CloseNotificationDelay}" VerticalAlignment="Center" />
																<TextBox Text="{Binding CloseTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0" VerticalAlignment="Center" MinWidth="100" />
															</StackPanel>

															<Button Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding PreviewCommand}"
																	Grid.Row="2" HorizontalAlignment="Right" Margin="5">
																<DockPanel>
																	<materialDesign:PackIcon Kind="Play" DockPanel.Dock="Left" />
																	<TextBlock Text="{lex:Loc Preview}" Margin="5,0" VerticalAlignment="Center" />
																</DockPanel>
															</Button>
														</Grid>
													</DataTemplate>
												</views:GenericDataTemplateSelectorItem>
												<views:GenericDataTemplateSelectorItem TemplatedType="settings:PopupNotificationSettings">
													<DataTemplate DataType="settings:PopupNotificationSettings">
														<Grid>
															<Grid.RowDefinitions>
																<RowDefinition />
																<RowDefinition />
																<RowDefinition />
																<RowDefinition />
															</Grid.RowDefinitions>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition />
															</Grid.ColumnDefinitions>

															<CheckBox Content="{lex:Loc Windows10ActionCenterNotification}" IsChecked="{Binding Win10Enabled, Mode=TwoWay}" Grid.ColumnSpan="2" Margin="5" />

															<TextBlock Text="{lex:Loc DisplayToShowPopupsAt}" VerticalAlignment="Center" Margin="5" Grid.Row="1" />
															<ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="5,0" DisplayMemberPath="Name" Grid.Row="1"
																	  SelectedValuePath="Value" SelectedValue="{Binding SelectedDisplay, Mode=TwoWay}"
																	  ItemsSource="{Binding AvailableDisplays}" IsEnabled="{Binding Win10Enabled, Converter={StaticResource InvertBoolConv}}" />

															<TextBlock Text="{lex:Loc CornerToShowPopupsIn}" Grid.Row="2" VerticalAlignment="Center" Margin="5" />
															<ComboBox ItemsSource="{Binding AvailableCorners}" DisplayMemberPath="Name" Grid.Column="1"
																	  SelectedValuePath="Value" SelectedValue="{Binding SelectedCorner, Mode=TwoWay}"
																	  Grid.Row="2" VerticalAlignment="Center" Margin="5,0" IsEnabled="{Binding Win10Enabled, Converter={StaticResource InvertBoolConv}}" />

															<Button Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding PreviewCommand}"
																	Grid.Row="3" HorizontalAlignment="Right" Margin="5" Grid.ColumnSpan="2">
																<DockPanel>
																	<materialDesign:PackIcon Kind="Play" DockPanel.Dock="Left" />
																	<TextBlock Text="{lex:Loc Preview}" Margin="5,0" VerticalAlignment="Center" />
																</DockPanel>
															</Button>
														</Grid>
													</DataTemplate>
												</views:GenericDataTemplateSelectorItem>
											</views:GenericTemplateSelector>
										</ContentControl.ContentTemplateSelector>
									</ContentControl>
								</GroupBox>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
			</TabItem>
		</TabControl>
	</DockPanel>
</dialogs:DialogWindow>